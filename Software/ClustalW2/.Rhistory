update.packages(ask = FALSE, checkBuilt = TRUE)
# Installing necessary packages
install.packages("adegenet", dep=TRUE)
install.packages("phangorn", dep=TRUE)
# Installing necessary packages
install.packages("adegenet", dep=TRUE)
install.packages("phangorn", dep=TRUE)
# Loading packages
library(ape)
library(adegenet)
library(phangorn)
dna <- read.dna(file="sequences-aligned-clustalw2.fasta")
aa_alignment <- read.phyDat("sequences-aligned-clustalw2.fasta", format = "fasta", type = "AA")
aa_alignment <- read.phyDat("sequences-aligned-clustalw2", format = "fasta", type = "AA")
aa_alignment <- read.phyDat("sequences-aligned-clustalw2.fa", format = "fasta", type = "AA")
aa_alignment <- read.phyDat("sequences-aligned-clustalw2.fas", format = "fasta", type = "AA")
aa_alignment <- read.phyDat("sequences-aligned-clustalw2.faa", format = "fasta", type = "AA")
aa_alignment <- read.phyDat("sequences-aligned-clustalw2.fasta", format = "fasta", type = "AA")
pwd
aa_alignment <- read.phyDat("sequences-aligned-clustalw2.fasta", format = "fasta", type = "AA")
aa_alignment <- read.phyDat("/Desktop/Botany563/MyProject/Software/ClustalW2/sequences-aligned-clustalw2.fasta", format = "fasta", type = "AA")
aa_alignment <- read.phyDat("~/Desktop/Botany563/MyProject/Software/ClustalW2/sequences-aligned-clustalw2.fasta", format = "fasta", type = "AA")
aa_alignment <- read.phyDat("sequences-aligned-clustalw2.fasta", format = "fasta", type = "AA")
library(ape)
library(adegenet)
library(phangorn)
# Change working directory to MUSCLE directory and run commands to create distance-based tree of MUSCLE aligned data
aa_alignment_MUSCLE <- read.phyDat("sequences-aligned-muscle.fasta", format = "fasta", type = "AA")
setwd("~/Desktop/Botany563/MyProject/Software/MUSCLE")
# Change working directory to MUSCLE directory and run commands to create distance-based tree of MUSCLE aligned data
aa_alignment_MUSCLE <- read.phyDat("sequences-aligned-muscle.fasta", format = "fasta", type = "AA")
# calculate distance
aa_MUSCLE <- as.AAbin(aa_alignment_MUSCLE)
# create AAbin object using WAG AA model
D_aa_MUSCLE <- dist.ml(aa_MUSCLE, model="WAG")
tre_aa_MUSCLE <- nj(D_aa_MUSCLE)
tre_aa_MUSCLE <- ladderize(tre_aa_MUSCLE)
plot(tre_aa_MUSCLE, cex=.2)
title("NJ tree (aligned with MUSCLE)")
plot(tre_aa_MUSCLE, cex=.2)
title("NJ distance-based tree (aligned with MUSCLE)")
setwd("~/Desktop/Botany563/MyProject/Software/ClustalW2")
# Change working directory to clustalw2 directory and run commands to create distance-based tree of clustalw2 aligned data
aa_alignment_clustalw2 <- read.phyDat("sequences-aligned-clustalw2.fasta", format = "fasta", type = "AA")
# calculate distance
aa_clustalw2 <- as.AAbin(aa_alignment_clustalw2)
# create AAbin object using WAG AA model
D_aa_clustalw2 <- dist.ml(aa_clustalw2, model="WAG")
tre_aa_clustalw2 <- nj(D_aa_clustalw2)
tre_aa_clustalw2 <- ladderize(tre_aa_clustalw2)
plot(tre_aa_clustalw2, cex=.2)
title("NJ distance-based tree (aligned with ClustalW2)")
setwd("~/Desktop/Botany563/MyProject/Software/MUSCLE")
# Change working directory back to MUSCLE directory and run commands to create parsimony-based tree of MUSCLE aligned data using JTT model
aa2_MUSCLE <- as.phyDat.AAbin(aa_MUSCLE)
tre.ini_aa_MUSCLE <- nj(dist.ml(aa_MUSCLE, model="JTT"))
parsimony(tre.ini_aa_MUSCLE, aa2_MUSCLE)
tre.pars_aa_MUSCLE <- optim.parsimony(tre.ini_aa_MUSCLE, aa2_MUSCLE)
plot(tre.pars_aa_MUSCLE, cex=0.2)
tre.ini_aa_clustalw2 <- nj(dist.ml(aa_clustalw2, model="JTT"))
parsimony(tre.ini_aa_clustalw2, aa2_clustalw2)
setwd("~/Desktop/Botany563/MyProject/Software/ClustalW2")
tre.ini_aa_clustalw2 <- nj(dist.ml(aa_clustalw2, model="JTT"))
parsimony(tre.ini_aa_clustalw2, aa2_clustalw2)
# Change working directory back to Clustalw2 directory and run commands to create parsimony-based tree of Clustalw2 aligned data using JTT model
aa2_clustalw2 <- as.phyDat.AAbin(aa_clustalw2)
tre.ini_aa_clustalw2 <- nj(dist.ml(aa_clustalw2, model="JTT"))
parsimony(tre.ini_aa_clustalw2, aa2_clustalw2)
tre.ini_aa_clustalw2 <- nj(dist.ml(aa_clustalw2, model="JTT"))
parsimony(tre.ini_aa_clustalw2, aa2_clustalw2)
# [1] 73
tre.pars_aa_clustalw2 <- optim.parsimony(tre.ini_aa_clustalw2, aa2_clustalw2)
plot(tre.pars_aa_clustalw2, cex=0.2)
